//
// File generated by rootcint at Mon Jun  6 13:53:15 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME EXVTXDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EXVTXDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void EXVTXKalDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EXVTXKalDetector(void *p = 0);
   static void *newArray_EXVTXKalDetector(Long_t size, void *p);
   static void delete_EXVTXKalDetector(void *p);
   static void deleteArray_EXVTXKalDetector(void *p);
   static void destruct_EXVTXKalDetector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EXVTXKalDetector*)
   {
      ::EXVTXKalDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EXVTXKalDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EXVTXKalDetector", ::EXVTXKalDetector::Class_Version(), "./EXVTXKalDetector.h", 6,
                  typeid(::EXVTXKalDetector), DefineBehavior(ptr, ptr),
                  &::EXVTXKalDetector::Dictionary, isa_proxy, 4,
                  sizeof(::EXVTXKalDetector) );
      instance.SetNew(&new_EXVTXKalDetector);
      instance.SetNewArray(&newArray_EXVTXKalDetector);
      instance.SetDelete(&delete_EXVTXKalDetector);
      instance.SetDeleteArray(&deleteArray_EXVTXKalDetector);
      instance.SetDestructor(&destruct_EXVTXKalDetector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EXVTXKalDetector*)
   {
      return GenerateInitInstanceLocal((::EXVTXKalDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EXVTXKalDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void EXVTXMeasLayer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_EXVTXMeasLayer(void *p);
   static void deleteArray_EXVTXMeasLayer(void *p);
   static void destruct_EXVTXMeasLayer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EXVTXMeasLayer*)
   {
      ::EXVTXMeasLayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EXVTXMeasLayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EXVTXMeasLayer", ::EXVTXMeasLayer::Class_Version(), "./EXVTXMeasLayer.h", 26,
                  typeid(::EXVTXMeasLayer), DefineBehavior(ptr, ptr),
                  &::EXVTXMeasLayer::Dictionary, isa_proxy, 4,
                  sizeof(::EXVTXMeasLayer) );
      instance.SetDelete(&delete_EXVTXMeasLayer);
      instance.SetDeleteArray(&deleteArray_EXVTXMeasLayer);
      instance.SetDestructor(&destruct_EXVTXMeasLayer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EXVTXMeasLayer*)
   {
      return GenerateInitInstanceLocal((::EXVTXMeasLayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EXVTXMeasLayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void EXVTXHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EXVTXHit(void *p = 0);
   static void *newArray_EXVTXHit(Long_t size, void *p);
   static void delete_EXVTXHit(void *p);
   static void deleteArray_EXVTXHit(void *p);
   static void destruct_EXVTXHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EXVTXHit*)
   {
      ::EXVTXHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EXVTXHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EXVTXHit", ::EXVTXHit::Class_Version(), "./EXVTXHit.h", 8,
                  typeid(::EXVTXHit), DefineBehavior(ptr, ptr),
                  &::EXVTXHit::Dictionary, isa_proxy, 4,
                  sizeof(::EXVTXHit) );
      instance.SetNew(&new_EXVTXHit);
      instance.SetNewArray(&newArray_EXVTXHit);
      instance.SetDelete(&delete_EXVTXHit);
      instance.SetDeleteArray(&deleteArray_EXVTXHit);
      instance.SetDestructor(&destruct_EXVTXHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EXVTXHit*)
   {
      return GenerateInitInstanceLocal((::EXVTXHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EXVTXHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *EXVTXKalDetector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EXVTXKalDetector::Class_Name()
{
   return "EXVTXKalDetector";
}

//______________________________________________________________________________
const char *EXVTXKalDetector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EXVTXKalDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EXVTXKalDetector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EXVTXKalDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EXVTXKalDetector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EXVTXKalDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EXVTXKalDetector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EXVTXKalDetector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *EXVTXMeasLayer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EXVTXMeasLayer::Class_Name()
{
   return "EXVTXMeasLayer";
}

//______________________________________________________________________________
const char *EXVTXMeasLayer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EXVTXMeasLayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EXVTXMeasLayer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EXVTXMeasLayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EXVTXMeasLayer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EXVTXMeasLayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EXVTXMeasLayer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EXVTXMeasLayer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *EXVTXHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *EXVTXHit::Class_Name()
{
   return "EXVTXHit";
}

//______________________________________________________________________________
const char *EXVTXHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EXVTXHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EXVTXHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EXVTXHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EXVTXHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EXVTXHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EXVTXHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EXVTXHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void EXVTXKalDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class EXVTXKalDetector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EXVTXKalDetector::Class(),this);
   } else {
      R__b.WriteClassBuffer(EXVTXKalDetector::Class(),this);
   }
}

//______________________________________________________________________________
void EXVTXKalDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EXVTXKalDetector.
      TClass *R__cl = ::EXVTXKalDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      EXVKalDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EXVTXKalDetector(void *p) {
      return  p ? new(p) ::EXVTXKalDetector : new ::EXVTXKalDetector;
   }
   static void *newArray_EXVTXKalDetector(Long_t nElements, void *p) {
      return p ? new(p) ::EXVTXKalDetector[nElements] : new ::EXVTXKalDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_EXVTXKalDetector(void *p) {
      delete ((::EXVTXKalDetector*)p);
   }
   static void deleteArray_EXVTXKalDetector(void *p) {
      delete [] ((::EXVTXKalDetector*)p);
   }
   static void destruct_EXVTXKalDetector(void *p) {
      typedef ::EXVTXKalDetector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EXVTXKalDetector

//______________________________________________________________________________
void EXVTXHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class EXVTXHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EXVTXHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(EXVTXHit::Class(),this);
   }
}

//______________________________________________________________________________
void EXVTXHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EXVTXHit.
      TClass *R__cl = ::EXVTXHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXX", &fXX);
      R__insp.InspectMember(fXX, "fXX.");
      TVTrackHit::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EXVTXHit(void *p) {
      return  p ? new(p) ::EXVTXHit : new ::EXVTXHit;
   }
   static void *newArray_EXVTXHit(Long_t nElements, void *p) {
      return p ? new(p) ::EXVTXHit[nElements] : new ::EXVTXHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_EXVTXHit(void *p) {
      delete ((::EXVTXHit*)p);
   }
   static void deleteArray_EXVTXHit(void *p) {
      delete [] ((::EXVTXHit*)p);
   }
   static void destruct_EXVTXHit(void *p) {
      typedef ::EXVTXHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EXVTXHit

//______________________________________________________________________________
void EXVTXMeasLayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class EXVTXMeasLayer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EXVTXMeasLayer::Class(),this);
   } else {
      R__b.WriteClassBuffer(EXVTXMeasLayer::Class(),this);
   }
}

//______________________________________________________________________________
void EXVTXMeasLayer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EXVTXMeasLayer.
      TClass *R__cl = ::EXVTXMeasLayer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaX", &fSigmaX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigmaZ", &fSigmaZ);
      EXVMeasLayer::ShowMembers(R__insp);
      TCylinder::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_EXVTXMeasLayer(void *p) {
      delete ((::EXVTXMeasLayer*)p);
   }
   static void deleteArray_EXVTXMeasLayer(void *p) {
      delete [] ((::EXVTXMeasLayer*)p);
   }
   static void destruct_EXVTXMeasLayer(void *p) {
      typedef ::EXVTXMeasLayer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EXVTXMeasLayer

/********************************************************
* EXVTXDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableEXVTXDict();

extern "C" void G__set_cpp_environmentEXVTXDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("EXVTXKalDetector.h");
  G__add_compiledheader("EXVTXMeasLayer.h");
  G__add_compiledheader("EXVTXHit.h");
  G__cpp_reset_tagtableEXVTXDict();
}
#include <new>
extern "C" int G__cpp_dllrevEXVTXDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* EXVTXKalDetector */
static int G__EXVTXDict_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EXVTXKalDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EXVTXKalDetector((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) EXVTXKalDetector((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EXVTXKalDetector[n];
       } else {
         p = new((void*) gvp) EXVTXKalDetector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EXVTXKalDetector;
       } else {
         p = new((void*) gvp) EXVTXKalDetector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EXVTXKalDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXKalDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EXVTXKalDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EXVTXKalDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EXVTXKalDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXKalDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EXVTXKalDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXKalDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EXVTXKalDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EXVTXKalDetector G__TEXVTXKalDetector;
static int G__EXVTXDict_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EXVTXKalDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EXVTXKalDetector*) (soff+(sizeof(EXVTXKalDetector)*i)))->~G__TEXVTXKalDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EXVTXKalDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EXVTXKalDetector*) (soff))->~G__TEXVTXKalDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EXVTXMeasLayer */
static int G__EXVTXDict_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EXVTXMeasLayer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EXVTXMeasLayer(
*(TMaterial*) libp->para[0].ref, *(TMaterial*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]), (const Char_t*) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) EXVTXMeasLayer(
*(TMaterial*) libp->para[0].ref, *(TMaterial*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]), (const Char_t*) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EXVTXMeasLayer(
*(TMaterial*) libp->para[0].ref, *(TMaterial*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) EXVTXMeasLayer(
*(TMaterial*) libp->para[0].ref, *(TMaterial*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EXVTXMeasLayer(
*(TMaterial*) libp->para[0].ref, *(TMaterial*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) EXVTXMeasLayer(
*(TMaterial*) libp->para[0].ref, *(TMaterial*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TKalMatrix* pobj;
         const TKalMatrix xobj = ((const EXVTXMeasLayer*) G__getstructoffset())->XvToMv(*(TVector3*) libp->para[0].ref);
         pobj = new TKalMatrix(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const EXVTXMeasLayer*) G__getstructoffset())->GetSigmaX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const EXVTXMeasLayer*) G__getstructoffset())->GetSigmaZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EXVTXMeasLayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXMeasLayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EXVTXMeasLayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EXVTXMeasLayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EXVTXMeasLayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXMeasLayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EXVTXMeasLayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXMeasLayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_253_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EXVTXMeasLayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EXVTXDict_253_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EXVTXMeasLayer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EXVTXMeasLayer(*(EXVTXMeasLayer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EXVTXMeasLayer G__TEXVTXMeasLayer;
static int G__EXVTXDict_253_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EXVTXMeasLayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EXVTXMeasLayer*) (soff+(sizeof(EXVTXMeasLayer)*i)))->~G__TEXVTXMeasLayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EXVTXMeasLayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EXVTXMeasLayer*) (soff))->~G__TEXVTXMeasLayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EXVTXDict_253_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EXVTXMeasLayer* dest = (EXVTXMeasLayer*) G__getstructoffset();
   *dest = *(EXVTXMeasLayer*) libp->para[0].ref;
   const EXVTXMeasLayer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EXVTXHit */
static int G__EXVTXDict_254_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EXVTXHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EXVTXHit((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) EXVTXHit((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EXVTXHit[n];
       } else {
         p = new((void*) gvp) EXVTXHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new EXVTXHit;
       } else {
         p = new((void*) gvp) EXVTXHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EXVTXHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EXVTXHit(
*(EXVTXMeasLayer*) libp->para[0].ref, (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) EXVTXHit(
*(EXVTXMeasLayer*) libp->para[0].ref, (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EXVTXHit(
*(EXVTXMeasLayer*) libp->para[0].ref, (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) EXVTXHit(
*(EXVTXMeasLayer*) libp->para[0].ref, (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), *(TVector3*) libp->para[3].ref
, (Double_t) G__double(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const EXVTXHit*) G__getstructoffset())->GetExactX();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EXVTXHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EXVTXHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EXVTXHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EXVTXHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EXVTXHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EXVTXHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EXVTXDict_254_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EXVTXHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EXVTXDict_254_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EXVTXHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EXVTXHit(*(EXVTXHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EXVTXHit G__TEXVTXHit;
static int G__EXVTXDict_254_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EXVTXHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EXVTXHit*) (soff+(sizeof(EXVTXHit)*i)))->~G__TEXVTXHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EXVTXHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EXVTXHit*) (soff))->~G__TEXVTXHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EXVTXDict_254_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EXVTXHit* dest = (EXVTXHit*) G__getstructoffset();
   *dest = *(EXVTXHit*) libp->para[0].ref;
   const EXVTXHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* EXVTXKalDetector */

/* EXVTXMeasLayer */

/* EXVTXHit */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEXVTXDict {
 public:
  G__Sizep2memfuncEXVTXDict(): p(&G__Sizep2memfuncEXVTXDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEXVTXDict::*p)();
};

size_t G__get_sizep2memfuncEXVTXDict()
{
  G__Sizep2memfuncEXVTXDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEXVTXDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector))) {
     EXVTXKalDetector *G__Lderived;
     G__Lderived=(EXVTXKalDetector*)0x1000;
     {
       EXVKalDetector *G__Lpbase=(EXVKalDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_EXVKalDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVKalDetector *G__Lpbase=(TVKalDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_TVKalDetector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObjArray *G__Lpbase=(TObjArray*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_TObjArray),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TSeqCollection *G__Lpbase=(TSeqCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_TSeqCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCollection *G__Lpbase=(TCollection*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_TCollection),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttElement *G__Lpbase=(TAttElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_TAttElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttDrawable *G__Lpbase=(TAttDrawable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector),G__get_linked_tagnum(&G__EXVTXDictLN_TAttDrawable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer))) {
     EXVTXMeasLayer *G__Lderived;
     G__Lderived=(EXVTXMeasLayer*)0x1000;
     {
       EXVMeasLayer *G__Lpbase=(EXVMeasLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer),G__get_linked_tagnum(&G__EXVTXDictLN_EXVMeasLayer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVMeasLayer *G__Lpbase=(TVMeasLayer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer),G__get_linked_tagnum(&G__EXVTXDictLN_TVMeasLayer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttElement *G__Lpbase=(TAttElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer),G__get_linked_tagnum(&G__EXVTXDictLN_TAttElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttDrawable *G__Lpbase=(TAttDrawable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer),G__get_linked_tagnum(&G__EXVTXDictLN_TAttDrawable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TCylinder *G__Lpbase=(TCylinder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer),G__get_linked_tagnum(&G__EXVTXDictLN_TCylinder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVSurface *G__Lpbase=(TVSurface*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer),G__get_linked_tagnum(&G__EXVTXDictLN_TVSurface),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer),G__get_linked_tagnum(&G__EXVTXDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit))) {
     EXVTXHit *G__Lderived;
     G__Lderived=(EXVTXHit*)0x1000;
     {
       TVTrackHit *G__Lpbase=(TVTrackHit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit),G__get_linked_tagnum(&G__EXVTXDictLN_TVTrackHit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TKalMatrix *G__Lpbase=(TKalMatrix*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit),G__get_linked_tagnum(&G__EXVTXDictLN_TKalMatrix),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TMatrixT<double> *G__Lpbase=(TMatrixT<double>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit),G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTlEdoublegR),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TMatrixTBase<double> *G__Lpbase=(TMatrixTBase<double>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit),G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTBaselEdoublegR),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit),G__get_linked_tagnum(&G__EXVTXDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEXVTXDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EXVTXDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EXVTXDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EXVTXDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EXVTXDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EXVTXDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EXVTXDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EXVTXDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EXVTXDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EXVTXDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EXVTXDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EXVTXDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__EXVTXDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__EXVTXDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__EXVTXDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__EXVTXDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* EXVTXKalDetector */
static void G__setup_memvarEXVTXKalDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector));
   { EXVTXKalDetector *p; p=(EXVTXKalDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EXVTXDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EXVTXMeasLayer */
static void G__setup_memvarEXVTXMeasLayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer));
   { EXVTXMeasLayer *p; p=(EXVTXMeasLayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSigmaX=",0,"sigma_x");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSigmaZ=",0,"sigma_z");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EXVTXDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EXVTXHit */
static void G__setup_memvarEXVTXHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit));
   { EXVTXHit *p; p=(EXVTXHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EXVTXDictLN_TVector3),-1,-1,4,"fXX=",0,"exact hit position");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EXVTXDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEXVTXDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncEXVTXKalDetector(void) {
   /* EXVTXKalDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector));
   G__memfunc_setup("EXVTXKalDetector",1521,G__EXVTXDict_222_0_1, 105, G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXKalDetector), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '100' m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EXVTXDict_222_0_2, 85, G__get_linked_tagnum(&G__EXVTXDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EXVTXKalDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EXVTXDict_222_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXKalDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EXVTXDict_222_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EXVTXKalDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EXVTXDict_222_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EXVTXKalDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EXVTXDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EXVTXDict_222_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EXVTXDict_222_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXKalDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EXVTXDict_222_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EXVTXKalDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EXVTXDict_222_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXKalDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EXVTXDict_222_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EXVTXKalDetector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~EXVTXKalDetector", 1647, G__EXVTXDict_222_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEXVTXMeasLayer(void) {
   /* EXVTXMeasLayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer));
   G__memfunc_setup("EXVTXMeasLayer",1314,G__EXVTXDict_253_0_1, 105, G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer), -1, 0, 8, 1, 1, 0, 
"u 'TMaterial' - 1 - min u 'TMaterial' - 1 - mout "
"d - 'Double_t' 0 - r0 d - 'Double_t' 0 - lhalf "
"d - 'Double_t' 0 - sigmax d - 'Double_t' 0 - sigmaz "
"g - 'Bool_t' 0 'EXVMeasLayer::kActive' type C - 'Char_t' 10 '\"VTXML\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XvToMv",596,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__EXVTXDictLN_TKalMatrix), -1, 0, 2, 1, 1, 8, 
"u 'TVTrackHit' - 11 - ht u 'TVector3' - 11 - xv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("XvToMv",596,G__EXVTXDict_253_0_3, 117, G__get_linked_tagnum(&G__EXVTXDictLN_TKalMatrix), -1, 0, 1, 1, 1, 8, "u 'TVector3' - 11 - xv", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("HitToXv",694,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__EXVTXDictLN_TVector3), -1, 0, 1, 1, 1, 8, "u 'TVTrackHit' - 11 - ht", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDhDa",708,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"u 'TVTrackHit' - 11 - ht u 'TVector3' - 11 - xv "
"u 'TKalMatrix' - 11 - dxphiada u 'TKalMatrix' - 1 - H", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessHit",1028,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TVector3' - 11 - xx u 'TObjArray' - 1 - hits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSigmaX",873,G__EXVTXDict_253_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaZ",875,G__EXVTXDict_253_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - color C - 'Char_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EXVTXDict_253_0_10, 85, G__get_linked_tagnum(&G__EXVTXDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EXVTXMeasLayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EXVTXDict_253_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXMeasLayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EXVTXDict_253_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EXVTXMeasLayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EXVTXDict_253_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EXVTXMeasLayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EXVTXDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EXVTXDict_253_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EXVTXDict_253_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXMeasLayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EXVTXDict_253_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EXVTXMeasLayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EXVTXDict_253_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXMeasLayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EXVTXDict_253_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EXVTXMeasLayer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EXVTXMeasLayer", 1314, G__EXVTXDict_253_0_22, (int) ('i'), G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer), -1, 0, 1, 1, 1, 0, "u 'EXVTXMeasLayer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EXVTXMeasLayer", 1440, G__EXVTXDict_253_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EXVTXDict_253_0_24, (int) ('u'), G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXMeasLayer), -1, 1, 1, 1, 1, 0, "u 'EXVTXMeasLayer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEXVTXHit(void) {
   /* EXVTXHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit));
   G__memfunc_setup("EXVTXHit",708,G__EXVTXDict_254_0_1, 105, G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 'kMdim' m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EXVTXHit",708,G__EXVTXDict_254_0_2, 105, G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit), -1, 0, 6, 1, 1, 0, 
"u 'EXVTXMeasLayer' - 11 - ms D - 'Double_t' 0 - x "
"D - 'Double_t' 0 - dx u 'TVector3' - 11 - xx "
"d - 'Double_t' 0 - b i - 'Int_t' 0 'kMdim' m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("XvToMv",596,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__EXVTXDictLN_TKalMatrix), -1, 0, 2, 1, 1, 8, 
"u 'TVector3' - 11 - xv d - 'Double_t' 0 - t0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DebugPrint",1012,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetExactX",877,G__EXVTXDict_254_0_5, 117, G__get_linked_tagnum(&G__EXVTXDictLN_TVector3), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EXVTXDict_254_0_6, 85, G__get_linked_tagnum(&G__EXVTXDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EXVTXHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EXVTXDict_254_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EXVTXDict_254_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EXVTXHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EXVTXDict_254_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EXVTXHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EXVTXDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EXVTXDict_254_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EXVTXDict_254_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EXVTXDict_254_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EXVTXHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EXVTXDict_254_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EXVTXHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EXVTXDict_254_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EXVTXHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EXVTXHit", 708, G__EXVTXDict_254_0_18, (int) ('i'), G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit), -1, 0, 1, 1, 1, 0, "u 'EXVTXHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EXVTXHit", 834, G__EXVTXDict_254_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EXVTXDict_254_0_20, (int) ('u'), G__get_linked_tagnum(&G__EXVTXDictLN_EXVTXHit), -1, 1, 1, 1, 1, 0, "u 'EXVTXHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEXVTXDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEXVTXDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEXVTXDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EXVTXDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TCollection = { "TCollection" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__EXVTXDictLN_TAttElement = { "TAttElement" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TVKalDetector = { "TVKalDetector" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TAttDrawable = { "TAttDrawable" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TVMeasLayer = { "TVMeasLayer" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_EXVKalDetector = { "EXVKalDetector" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_EXVTXKalDetector = { "EXVTXKalDetector" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TKalMatrix = { "TKalMatrix" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TVSurface = { "TVSurface" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TCylinder = { "TCylinder" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TMaterial = { "TMaterial" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_TVTrackHit = { "TVTrackHit" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_EXVMeasLayer = { "EXVMeasLayer" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_EXVTXMeasLayer = { "EXVTXMeasLayer" , 99 , -1 };
G__linked_taginfo G__EXVTXDictLN_EXVTXHit = { "EXVTXHit" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEXVTXDict() {
  G__EXVTXDictLN_TClass.tagnum = -1 ;
  G__EXVTXDictLN_TBuffer.tagnum = -1 ;
  G__EXVTXDictLN_TMemberInspector.tagnum = -1 ;
  G__EXVTXDictLN_TObject.tagnum = -1 ;
  G__EXVTXDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EXVTXDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EXVTXDictLN_TObjArray.tagnum = -1 ;
  G__EXVTXDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EXVTXDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__EXVTXDictLN_TVector3.tagnum = -1 ;
  G__EXVTXDictLN_TCollection.tagnum = -1 ;
  G__EXVTXDictLN_TSeqCollection.tagnum = -1 ;
  G__EXVTXDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__EXVTXDictLN_TAttElement.tagnum = -1 ;
  G__EXVTXDictLN_TVKalDetector.tagnum = -1 ;
  G__EXVTXDictLN_TAttDrawable.tagnum = -1 ;
  G__EXVTXDictLN_TVMeasLayer.tagnum = -1 ;
  G__EXVTXDictLN_EXVKalDetector.tagnum = -1 ;
  G__EXVTXDictLN_EXVTXKalDetector.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__EXVTXDictLN_TKalMatrix.tagnum = -1 ;
  G__EXVTXDictLN_TVSurface.tagnum = -1 ;
  G__EXVTXDictLN_TCylinder.tagnum = -1 ;
  G__EXVTXDictLN_TMaterial.tagnum = -1 ;
  G__EXVTXDictLN_TVTrackHit.tagnum = -1 ;
  G__EXVTXDictLN_EXVMeasLayer.tagnum = -1 ;
  G__EXVTXDictLN_EXVTXMeasLayer.tagnum = -1 ;
  G__EXVTXDictLN_EXVTXHit.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEXVTXDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TCollection);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TAttElement);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TVKalDetector);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TAttDrawable);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TVMeasLayer);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_EXVKalDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EXVTXDictLN_EXVTXKalDetector),sizeof(EXVTXKalDetector),-1,292096,"Sample hit class",G__setup_memvarEXVTXKalDetector,G__setup_memfuncEXVTXKalDetector);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TKalMatrix);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TVSurface);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TCylinder);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TMaterial);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_TVTrackHit);
   G__get_linked_tagnum_fwd(&G__EXVTXDictLN_EXVMeasLayer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EXVTXDictLN_EXVTXMeasLayer),sizeof(EXVTXMeasLayer),-1,324608,"Sample measurement layer class",G__setup_memvarEXVTXMeasLayer,G__setup_memfuncEXVTXMeasLayer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EXVTXDictLN_EXVTXHit),sizeof(EXVTXHit),-1,324864,"Sample hit class",G__setup_memvarEXVTXHit,G__setup_memfuncEXVTXHit);
}
extern "C" void G__cpp_setupEXVTXDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupEXVTXDict()");
  G__set_cpp_environmentEXVTXDict();
  G__cpp_setup_tagtableEXVTXDict();

  G__cpp_setup_inheritanceEXVTXDict();

  G__cpp_setup_typetableEXVTXDict();

  G__cpp_setup_memvarEXVTXDict();

  G__cpp_setup_memfuncEXVTXDict();
  G__cpp_setup_globalEXVTXDict();
  G__cpp_setup_funcEXVTXDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEXVTXDict();
  return;
}
class G__cpp_setup_initEXVTXDict {
  public:
    G__cpp_setup_initEXVTXDict() { G__add_setup_func("EXVTXDict",(G__incsetup)(&G__cpp_setupEXVTXDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEXVTXDict() { G__remove_setup_func("EXVTXDict"); }
};
G__cpp_setup_initEXVTXDict G__cpp_setup_initializerEXVTXDict;

